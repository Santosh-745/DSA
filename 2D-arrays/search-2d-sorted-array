/* 
   problem 74:
   every row is sorted 
   && first element of any row is greater than last eleent of it's previous row
*/
class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int start = 0, 
            end = (matrix.size() * matrix[0].size()) - 1,
            totalCol = matrix[0].size();
        
        while(start <= end) {
            int mid = start + (end - start) / 2;
            int rowIndex = mid / totalCol,
                colIndex = mid % totalCol;
            int element = matrix[rowIndex][colIndex];
            // cout << "\nmid: " << mid
            //      << " start: " << start
            //      << " end: " << end
            //      << " rI: " << rowIndex
            //      << " cI: " << colIndex
            //      << " target: " << target
            //      << " ele: " << element;
            if(element == target) {
                return true;
            } else if(target < element) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return false;
    }
};
