class Solution {
  	hasPathSum(root,S){
  	    if(!root) return false;
  	    if(!root.left && !root.right) {
  	        if(S - root.key === 0)
  	            return true;
  	        return false;
  	    }
  	 //   return this.hasPathSum(root.left, S-root.key) || this.hasPathSum(root.right, S-root.key);
  	    return this.utility(root.left, S, root.key) || this.utility(root.right, S, root.key);
  	}
  	
  	utility(root, S, total) {
  	    if(!root)
  	        return false;
  	    if(!root.left && !root.right){
  	        if(root.key + total === S)
  	            return true;
  	        return false;
  	    } 
  	    return this.utility(root.left, S, root.key + total) || this.utility(root.right, S, root.key + total);
  	}
}
