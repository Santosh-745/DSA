Dist(n1, n2) = Dist(root, n1) + Dist(root, n2) - 2*Dist(root, lca) 

class Solution {
  	findDist(root,a,b){
  	    let lca = this.lca(root, a, b).data;
        if(root.data == a)
            return this.distFromRoot(root, b, 0) - 1;
        if(root.data == b)
            return this.distFromRoot(root, a, 0) - 1;
  	    if(root.data == lca)
  	        return this.distFromRoot(root, a, 0) + this.distFromRoot(root, b, 0) - 2;
  	    return this.distFromRoot(root, a, 0) + this.distFromRoot(root, b, 0) - (2 * this.distFromRoot(root, lca, 0));
  	}
  	
  	distFromRoot(root, a, d) {
  	    if(!root) return 0;
  	    if(root.data === a) return ++d;
  	    let dLeft = this.distFromRoot(root.left, a, d);
  	    let dRight = this.distFromRoot(root.right, a, d);
  	    if(dLeft > d)
  	        return dLeft + 1;
  	    if(dRight > d) return dRight + 1;
  	}
  	
  	lca(root, a, b) {
        if(!root) return null;
        if(root.data == a || root.data == b) return root;
        let left = this.lca(root.left, a, b);
        let right = this.lca(root.right, a, b);
        if(left && right) return root;
        return (left ? left : right);
  	}
}
