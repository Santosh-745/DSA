vector<int>dfsOfGraph(int V, vector<int> adj[])
	{
	    vector<int> dfs;
	    int i, j;
	   // for (i = 0; i < V; i++){
	   //     cout<<i<<" ";
	   //     for(j = 0; j < adj[i].size(); j++ )
	   //         cout<<adj[i][j]<<" ";
	   //     cout<<"\n";
	   // }
	   int vis[V] = {0};
	   //cout<<vis[1];
	   //for(i = 0; i < V; i++){
	       int node;
	       //if(!vis[i]){
	           stack<int> s;
	           s.push(0);
	           while(!s.empty()){
	               node = s.top();
	               s.pop();
	               if(!vis[node]){
    	               dfs.push_back(node);
    	               vis[node] = 1;
    	                for(j = adj[node].size() - 1; j >= 0 ; j--){
    	                    s.push(adj[node][j]);
    	                }     
	               }
	           }
	       //}
	   //}
	   //for(auto &it: dfs)
	   // cout<<it;
	    return dfs;
	}
